using MessagePack;
namespace Command.DB
{
    [MessagePackObject] public class Config
    {
        [Key(0)] public System.Int32 Id { get; set; }
        [Key(1)] public System.Int64 UserSetupPartyCharacterId0 { get; set; }
        [Key(2)] public System.Int64 UserSetupPartyCharacterId1 { get; set; }
        [Key(3)] public System.Int64 UserSetupPartyCharacterId2 { get; set; }
        [Key(4)] public System.Int64 UserSetupStoryPartyCharacterId0 { get; set; }
        [Key(5)] public System.Int64 UserSetupStoryPartyCharacterId1 { get; set; }
        [Key(6)] public System.Int64 UserSetupStoryPartyCharacterId2 { get; set; }
        [Key(7)] public System.Int64 PartyResetCharacterId0 { get; set; }
        [Key(8)] public System.Int64 PartyResetWeaponId0 { get; set; }
        [Key(9)] public System.Int32 AnotherDungeonMaxHpDamagePermil { get; set; }
        [Key(10)] public System.Int32 AnotherDungeonMaxHpLowerLimitPermil { get; set; }
        [Key(11)] public System.Int32 CharacterCriticalMagnificationPermil { get; set; }
        [Key(12)] public System.Int32 BattleContinueAtbCost { get; set; }
        [Key(13)] public System.Int32 BattleContinueLimitGaugePermil { get; set; }
        [Key(14)] public System.Int32 BattleContinueInvincibleSecond { get; set; }
        [Key(15)] public System.Int32 BattleMultiRestoreAtbCost { get; set; }
        [Key(16)] public System.Int32 BattleMultiRestoreInvincibleSecond { get; set; }
        [Key(17)] public System.Int32 ForceUpdateMaster { get; set; }
        [Key(18)] public System.Int64 BattleScoreSettingId { get; set; }
        [Key(19)] public System.Int32 BattleMultiIdleLimitSecond { get; set; }
        [Key(20)] public System.Int32 DefaultAccessoryLimit { get; set; }
        [Key(21)] public System.Int32 DefaultMateriaLimit { get; set; }
        [Key(22)] public System.Int32 DefaultCraftLimit { get; set; }
        [Key(23)] public System.Int32 DefaultChocoboLimit { get; set; }
        [Key(24)] public System.Int64 AnotherDungeonKeyResetId { get; set; }
        [Key(25)] public System.Int32 AnotherDungeonKeyGrantCountPerReset { get; set; }
        [Key(26)] public System.Int32 BattleContinueConsumptionStone { get; set; }
        [Key(27)] public System.Int32 AccessoryExtensionConsumptionStone { get; set; }
        [Key(28)] public System.Int32 MateriaExtensionConsumptionStone { get; set; }
        [Key(29)] public System.Int32 CraftExtensionConsumptionStone { get; set; }
        [Key(30)] public System.Int32 ChocoboExtensionConsumptionStone { get; set; }
        [Key(31)] public System.Int32 ChocoboExpeditionShortenCountMax { get; set; }
        [Key(32)] public System.Int32 StaminaCountMax { get; set; }
        [Key(33)] public System.Int32 StaminaRecoveryIntervalSec { get; set; }
        [Key(34)] public System.Int32 UserGiftBoxCount { get; set; }
        [Key(35)] public System.Int32 UserGiftHistoryCount { get; set; }
        [Key(36)] public System.Int64 GiftDebugLanguageId { get; set; }
        [Key(37)] public System.Int64 GiftLimitLanguageId { get; set; }
        [Key(38)] public System.Int64 GiftLoginBonusLanguageId { get; set; }
        [Key(39)] public System.Int64 GiftMissionRewardLanguageId { get; set; }
        [Key(40)] public System.Int64 GiftDefaultLanguageId { get; set; }
        [Key(41)] public System.Int64 GiftFirstMeetingLanguageId { get; set; }
        [Key(42)] public System.Int64 GiftEcPassLanguageId { get; set; }
        [Key(43)] public System.Int64 UserProfileInitNameLanguageId { get; set; }
        [Key(44)] public System.Int64 UserProfileInitMessageLanguageId { get; set; }
        [Key(45)] public System.Int64 UserProfileInitTopHonorId { get; set; }
        [Key(46)] public System.Int64 UserProfileInitBottomHonorId { get; set; }
        [Key(47)] public System.Int64 UserProfileInitBackgroundHonorId { get; set; }
        [Key(48)] public System.Int32 WeaponMedalCountR { get; set; }
        [Key(49)] public System.Int32 WeaponMedalCountSr { get; set; }
        [Key(50)] public System.Int32 WeaponMedalCountSsr { get; set; }
        [Key(51)] public System.Int32 WeaponMedalToGeneralMedalCount { get; set; }
        [Key(52)] public System.Int64 DefaultGachaDirectionLotGroupId { get; set; }
        [Key(53)] public System.Int64 SpecialMissionCoolTimeSec { get; set; }
        [Key(54)] public System.Int32 PieceExchangeRequiredCount { get; set; }
        [Key(55)] public System.Int64 TutorialConfigId { get; set; }
        [Key(56)] public System.Int64 ChocoboFarmDungeonResourceId { get; set; }
        [Key(57)] public System.Int32 ShopMateriaExtendCount { get; set; }
        [Key(58)] public System.Int32 ShopAccessoryExtendCount { get; set; }
        [Key(59)] public System.Int32 ShopChocoboExtendCount { get; set; }
        [Key(60)] public System.Int32 ShopCraftExtendCount { get; set; }
        [Key(61)] public System.Int64 DefaultBoostId { get; set; }
        [Key(62)] public System.Int32 BoostCountMax { get; set; }
        [Key(63)] public System.Int32 FriendCountMax { get; set; }
        [Key(64)] public System.Int32 FriendRequestCountMax { get; set; }
        [Key(65)] public System.Int32 FriendReceiveCountMax { get; set; }
        [Key(66)] public System.Int32 FriendRequestExpireDayCount { get; set; }
        [Key(67)] public System.Int32 MultiMedalFriendBonusCoefficient { get; set; }
        [Key(68)] public System.Int32 PlayRecordAnotherDungeonHighRankClearDungeonRankType { get; set; }
        [Key(69)] public System.Int64 UserProfileInitIconHonorId { get; set; }
        [Key(70)] public System.Int64 BattleServerEnterRoomLimitSec { get; set; }
        [Key(71)] public System.Int64 BattleServerRandomRoomOutgameLimitSec { get; set; }
        [Key(72)] public System.Int64 BattleServerPrivateRoomOutgameLimitSec { get; set; }
        [Key(73)] public System.Int64 BattleServerReadyBattleLimitSec { get; set; }
        [Key(74)] public System.Int64 BattleServerBattleLimitSec { get; set; }
        [Key(75)] public System.Int64 BattleServerMoveSessionLimitSec { get; set; }
        [Key(76)] public System.Int64 BattleServerContinueLimitSec { get; set; }
        [Key(77)] public System.Int64 BattleServerPlayNextBattleLimitSec { get; set; }
        [Key(78)] public System.Int32 BattleMultiPrivateRoomRequiredUserCount { get; set; }
        [Key(79)] public System.Int32 BattleMultiPrivateRoomNoDigits { get; set; }
        [Key(80)] public System.Int64 ScoreBattleRankBaseId { get; set; }
        [Key(81)] public System.Int32 WeaponMain1ParameterCoefficient { get; set; }
        [Key(82)] public System.Int32 WeaponMain1PassiveSkillPointCoefficient { get; set; }
        [Key(83)] public System.Int32 WeaponSubParameterCoefficient { get; set; }
        [Key(84)] public System.Int32 WeaponSubPassiveSkillPointCoefficient { get; set; }
        [Key(85)] public System.Int64 AdvertisementId { get; set; }
        [Key(86)] public System.Int32 MatchInviteSendCountMax { get; set; }
        [Key(87)] public System.Int32 MatchInviteReceiveCountMax { get; set; }
        [Key(88)] public System.Int32 ChocoboLimitFoodCount { get; set; }
        [Key(89)] public System.Int64 ChocoboFoodCountResetId { get; set; }
        [Key(90)] public System.Int64 DefaultStoneShopId { get; set; }
        [Key(91)] public System.Int64 DefaultChocoboShopGroupId { get; set; }
        [Key(92)] public System.Int32 NoticeCheckDurationSec { get; set; }
        [Key(93)] public System.Int64 DefaultHardMedalShopId { get; set; }
        [Key(94)] public System.Int64 DefaultMultiMedalShopId { get; set; }
        [Key(95)] public System.Int64 DefaultEcPassShopId { get; set; }
        [Key(96)] public System.Int32 SkillDescriptionHealLevelThresholdLow { get; set; }
        [Key(97)] public System.Int32 SkillDescriptionHealLevelThresholdMiddle { get; set; }
        [Key(98)] public System.Int32 SkillDescriptionHealLevelThresholdHigh { get; set; }
        [Key(99)] public System.Int64 BattleServerContinueVoteLimitSec { get; set; }
        [Key(100)] public System.Int64 StoryStandbyCharacterExpCoefficient { get; set; }
        [Key(101)] public System.Int32 RewardHintDisplayMaxCount { get; set; }
        [Key(102)] public System.Int64 CbtCloseDatetime { get; set; }
        [Key(103)] public System.Int32 BattleRemainingTimeDisplayStartSec { get; set; }
        [Key(104)] public System.Int32 ChocoboAdventureRewardRatePermil { get; set; }
        [Key(105)] public System.Int32 DungeonSaveCrystalConsumptionCount { get; set; }
        [Key(106)] public System.Int64 FirstMeetingMultiMedalPermil { get; set; }
        [Key(107)] public System.Int32 InterjectionDisplayLimit { get; set; }
        [Key(108)] public System.Int32 SkillDescriptionPenetrationLevelThresholdLow { get; set; }
        [Key(109)] public System.Int32 SkillDescriptionPenetrationLevelThresholdMiddle { get; set; }
        [Key(110)] public System.Int32 SkillDescriptionPenetrationLevelThresholdHigh { get; set; }
        [Key(111)] public System.Int32 ChocoboExpeditionRareDropCoefficient { get; set; }
        [Key(112)] public System.Int32 ChocoboExpeditionMedalCoefficient { get; set; }
        [Key(113)] public System.Int32 ChocoboExpeditionGilCoefficient { get; set; }
        [Key(114)] public System.Int32 ChocoboExpeditionCompareCharacterLevel { get; set; }
        [Key(115)] public System.Int32 ChocoboExpeditionCharacterExpCoefficient { get; set; }
        [Key(116)] public System.Int64 GiftSeasonPassRewardLanguageId { get; set; }
        [Key(117)] public System.Int32 DungeonSaveCrystalExchangeMaxPossessionCount { get; set; }
        [Key(118)] public System.Int64 InAppReviewClearedStoryEpisodeId { get; set; }
        [Key(119)] public System.Int32 PartyNameUpperLimit { get; set; }
    }
}
